version: '3.8'
services:
    nginx:
        hostname: ${COMPOSE_PROJECT_NAME}-nginx
        image: ${COMPOSE_PROJECT_NAME}/nginx
        build:
            context: docker/nginx
        environment:
            DNS_RESOLVER: 127.0.0.11
            PHPFPM_UPSTREAM: php-fpm:9000
        volumes:
            - ./public:/var/www/html/public:ro
        networks:
            - default

    php-fpm: &php_service
        hostname: ${COMPOSE_PROJECT_NAME}-php-fpm
        image: ${COMPOSE_PROJECT_NAME}/php-fpm
        build:
            context: docker/php
            target: dev
            args:
                UID: ${DOCKER_UID}
        environment:
            TIMEZONE: ${TIMEZONE}
            COMPOSER_MEMORY_LIMIT: -1
            TRUSTED_PROXIES: 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
            DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
            MESSENGER_TRANSPORT_DSN: amqp://${AMQP_USER}:${AMQP_PASSWORD}@rabbitmq:5672/${AMQP_VHOST_URLENCODE}/messages
            REDIS_DSN: redis://${REDIS_PASSWORD}@redis:6379
            MAILER_DSN: smtp://mailhog:1025
        volumes:
            - .:/var/www/html
        networks:
            - default

    php-messenger-consumer:
        <<: *php_service
        hostname: ${COMPOSE_PROJECT_NAME}-php-messenger-consumer
        image: ${COMPOSE_PROJECT_NAME}/php-messenger-consumer
        command:
            - 'sh'
            - '-c'
            - 'while true; do bin/console messenger:consume --memory-limit=128M --time-limit=60 -vv || sleep 10; done'

    mysql:
        image: ${COMPOSE_PROJECT_NAME}/mysql
        build:
            context: docker/mysql
        hostname: ${COMPOSE_PROJECT_NAME}-mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            TZ: ${TIMEZONE}
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - default

    rabbitmq:
        image: ${COMPOSE_PROJECT_NAME}/rabbitmq
        build:
            context: docker/rabbitmq
        hostname: ${COMPOSE_PROJECT_NAME}-rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: ${AMQP_USER}
            RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
            RABBITMQ_DEFAULT_VHOST: ${AMQP_VHOST}
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        networks:
            - default

    redis:
        image: redis:6.0-alpine
        hostname: ${COMPOSE_PROJECT_NAME}-redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        environment:
            REDISCLI_AUTH: ${REDIS_PASSWORD}
        networks:
            - default

    mailhog:
        image: mailhog/mailhog:v1.0.1
        hostname: ${COMPOSE_PROJECT_NAME}-mailhog
        networks:
            - default

    adminer:
        image: adminer:4.7
        hostname: ${COMPOSE_PROJECT_NAME}-adminer
        environment:
            ADMINER_DEFAULT_SERVER: mysql
        networks:
            - default

volumes:
    mysql:
    rabbitmq:

networks:
    default:
